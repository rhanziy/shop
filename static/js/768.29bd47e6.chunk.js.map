{"version":3,"file":"static/js/768.29bd47e6.chunk.js","mappings":"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","sources":["routes/Detail.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addCart } from '../store/store';\r\n\r\n// import { Context1 } from './../App.js'; 성능이슈로 잘 안씀\r\n\r\n// let Btn = styled.button`\r\n//     background: ${ props => props.bg };\r\n//     color: ${ props => props.bg == 'blue' ? 'white' : 'black' };\r\n//     padding: 10px;\r\n// `\r\n// let newBtn = style.button(Btn)`\r\n\r\n// `\r\n\r\nfunction Detail(props) {\r\n\r\n    let dispatch = useDispatch();\r\n    // let { stock } = useContext(Context1);\r\n\r\n    let { id } = useParams();\r\n    let shoesImg = parseInt(id) + 1;\r\n    let [discount, setDiscount] = useState(true);\r\n    let [count, setCount] = useState(2);\r\n    let [amount, setAmount] = useState('');\r\n    let [alert, setAlert] = useState(false);\r\n    let [ tab, setTab ] = useState(0);\r\n    let [ fade, setFade ] = useState('');\r\n\r\n    useEffect(()=>{\r\n        let getItem = JSON.parse(localStorage.watched);\r\n        getItem.push(id);\r\n        getItem = new Set(getItem);\r\n        getItem = Array.from(getItem);\r\n        localStorage.setItem('watched', JSON.stringify(getItem));\r\n    }, [])\r\n\r\n    // let timer = setInterval(() => {\r\n    //     count--;\r\n    //     setCount(count);\r\n    // }, 1000)\r\n    \r\n    // console.log(count);\r\n\r\n    // 재 렌더링 마다 코드실행\r\n    useEffect(() => {\r\n\r\n        let a = setTimeout(()=>{\r\n            setFade(('end'));\r\n        }, 200)\r\n\r\n        let timer2 = setTimeout(() => {\r\n            setDiscount(false);\r\n            // clearInterval(timer);         \r\n        }, 2000)\r\n\r\n        return() => {\r\n            //useEffect 동작 전 실행할 코드, 기존 코드 치우기(clean up function)\r\n            setFade('');\r\n            clearTimeout(timer2, a);\r\n        };\r\n    }, [ ]); // [] mount시 1회 코드실행, 안에 변수를 넣으면 특정 state 변경 시 실행\r\n\r\n    useEffect(() => {\r\n        if (isNaN(amount)) {\r\n            setAlert(true);\r\n        } else {\r\n            setAlert(false);\r\n        }\r\n    }, [amount])\r\n\r\n\r\n    return (\r\n        <div className={ 'container start' + fade } style={{transition : 'opacity 0.5s'}}>\r\n            {\r\n                discount ?\r\n                    <div className=\"alert alert-warning\">\r\n                        {count}초 이내 구매 시 할인\r\n                    </div>\r\n                    : null\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src={'https://codingapple1.github.io/shop/shoes' + shoesImg + '.jpg'} width=\"100%\" />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\r\n                    <p>{props.shoes[id].content}</p>\r\n                    <p>{props.shoes[id].price}</p>\r\n                    {\r\n                        alert ? <p>경고: 숫자만 입력하세요</p> : null\r\n                    }\r\n                    <input\r\n                        placeholder=\"수량 입력\"\r\n                        onChange={(e) => {\r\n                            setAmount(e.target.value);\r\n                        }}\r\n                    />\r\n                    <button \r\n                        className=\"btn btn-danger\"\r\n                        onClick={()=>{\r\n                            dispatch(addCart(props.shoes[id]));\r\n                        }}\r\n                    >주문하기</button>\r\n                </div>\r\n            </div>\r\n            <Nav fill variant=\"tabs\" defaultActiveKey=\"link0\" style={{ marginTop: \"50px\" }}>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link0\" onClick={()=>{ setTab(0) }}>상품 정보</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link1\" onClick={()=>{ setTab(1) }}>상세 사이즈</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link2\" onClick={()=>{ setTab(2) }}>비고</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <TabContent tab={tab} />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nfunction TabContent({tab}){\r\n\r\n    let [ fade, setFade ] = useState('');\r\n\r\n    useEffect(()=>{\r\n        let a = setTimeout(()=>{ setFade('end'); }, 100)\r\n        return() => { \r\n            clearTimeout(a);\r\n            setFade('');\r\n        }\r\n    }, [ tab ])\r\n\r\n   return  (\r\n    <div className={ 'start ' + fade }>\r\n        {[<div>내용0</div>, <div>내용1</div>, <div>내용2</div>][tab]}\r\n    </div>\r\n   );\r\n}\r\n\r\n\r\nexport default Detail;"],"names":["TabContent","tab","useState","fade","setFade","useEffect","a","setTimeout","clearTimeout","className","props","dispatch","useDispatch","id","useParams","shoesImg","parseInt","discount","setDiscount","count","amount","setAmount","alert","setAlert","setTab","getItem","JSON","parse","localStorage","watched","push","Set","Array","from","setItem","stringify","timer2","isNaN","style","transition","src","width","shoes","title","content","price","placeholder","onChange","e","target","value","onClick","addCart","fill","variant","defaultActiveKey","marginTop","eventKey"],"sourceRoot":""}