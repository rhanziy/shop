{"version":3,"file":"static/js/149.5964cc70.chunk.js","mappings":"gUAuCA,EAnC2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAK,EAALA,MACAC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACAC,EAAU,EAAVA,WACGC,GAAK,YAEFC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAiB,YAAIH,GAAWD,GAAQ,GAAJ,OAAOI,EAAiB,YAAIJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAiB,YAAuB,kBAAZR,EAAuB,WAAH,OAAcA,GAAY,WAAaC,GAAY,GAAJ,OAAOO,EAAiB,aAAaN,GAAc,GAAJ,OAAOM,EAAiB,eAAeL,GAAS,GAAJ,OAAOK,EAAiB,WAEzWI,GAAqBC,EAAAA,EAAAA,KAAK,SAAS,kBAAKN,GAAK,IACjDR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAiB,eAM1C,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAe,YAAIR,KAGtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEd,CAEA,OAAOA,CACT,I,8BCkCA,MApDA,WAEI,IAAII,GAAQC,EAAAA,EAAAA,KAAY,SAACD,GAAK,OAAMA,CAAK,IACrCE,GAAWC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,UAAS,GAAE,eAMnC,OANU,KAAU,MAOhB,4BAGI,yBAAIJ,EAAMK,KAAKC,KAAMN,EAAMK,KAAKE,IAAG,sCACnC,UAAC,EAAK,YACF,4BACI,2BACI,+BACA,gDACA,0CACA,sDACA,+CAGR,2BAEQP,EAAMQ,KAAKC,KAAI,SAACC,EAAGC,GAAC,OAChB,2BACI,wBAAKA,EAAE,KACP,wBAAKD,EAAEJ,QACP,wBAAKI,EAAEE,SACP,yBACI,mBAAQC,QAAS,WACbX,GAASY,EAAAA,EAAAA,GAAQJ,EAAEK,IACvB,EAAE,oBAEN,yBACI,mBAAQF,QAAS,WACbX,GAASc,EAAAA,EAAAA,IAAQN,EAAEK,IACvB,EAAE,qBAZDJ,EAcJ,WAOjC,C","sources":["../node_modules/react-bootstrap/esm/Table.js","routes/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import { Table } from \"react-bootstrap\";\r\nimport { memo, useState } from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeName, increase } from '../store/userSlice.js';\r\nimport { upCount, delCart } from '../store/store';\r\n\r\n\r\n\r\n// memo) 감싸진 컴포넌트에서 기존 props와 비교해서 변했을때만 렌더링\r\n// let Child = memo(function(){\r\n//     console.log('재렌더링');\r\n//     return <div>자식</div>\r\n// })\r\n\r\n\r\n// function 함수(){ \r\n//     return 반복문 10억번 돌린 결과;\r\n// }\r\n\r\n\r\nfunction Cart() {\r\n\r\n    let state = useSelector((state) =>  state )\r\n    let dispatch = useDispatch()  // store.js로 요청보내주는 함수\r\n    let [count, setCount] = useState(0);\r\n\r\n    // useMemo) 컴포넌트 렌더링 시 1회만 실행해줌. useEffect와 유사\r\n    // useMemo는 렌더링 될 때, useEffect는 HTML코드 다 읽은 후 에 실행.\r\n    // let result = useMemo(()=>{ return 함수()}, [])\r\n\r\n    return (\r\n        <div>\r\n            {/* <Child></Child>\r\n            <button onClick={()=>{ setCount(count++) }}> + </button> */}\r\n            <p>{state.user.name}{state.user.age}의 장바구니</p>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>상품명</th>\r\n                        <th>수량</th>\r\n                        <th>변경하기</th>\r\n                        <th>삭제</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { \r\n                        state.cart.map((a, i) =>\r\n                            <tr key={i}>\r\n                                <td>{i+1}</td>\r\n                                <td>{a.name}</td>\r\n                                <td>{a.count}</td>\r\n                                <td>\r\n                                    <button onClick={()=>{\r\n                                        dispatch(upCount(a.id));\r\n                                    }}> + </button>\r\n                                </td>\r\n                                <td>\r\n                                    <button onClick={()=>{\r\n                                        dispatch(delCart(a.id));\r\n                                    }}> - </button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cart;"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","state","useSelector","dispatch","useDispatch","useState","user","name","age","cart","map","a","i","count","onClick","upCount","id","delCart"],"sourceRoot":""}